#!/bin/bash
#
# Copyright 2020 eBlocker Open Source UG (haftungsbeschraenkt)
#
# Licensed under the EUPL, Version 1.2 or - as soon they will be
# approved by the European Commission - subsequent versions of the EUPL
# (the "License"); You may not use this work except in compliance with
# the License. You may obtain a copy of the License at:
#
#   https://joinup.ec.europa.eu/page/eupl-text-11-12
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#

set -e

SCRIPT_NAME=$0

CA_PATH=/opt/eblocker-icap/keys/mobile
CONFIG_PATH=/etc/openvpn


# Clean up existing CA and key files
function purge {
    cd $CONFIG_PATH && rm -f ca.crt crl.pem eblocker.crt eblocker.key dh2048.pem ta.key
}

# Initialize with a new CA
# Prerequisite: OpenVpnCa.java has generated a CA, server key/certificate and an empty CRL in $CA_PATH
function init {
    purge

    # Generate Diffie-Hellman parameters
    openssl dhparam -dsaparam -out $CONFIG_PATH/dh2048.pem 2048 2>&1

    # Copy CA and server key/certificate so OpenVPN can access them
    cd $CA_PATH && cp eblocker.crt eblocker.key ca.crt "$CONFIG_PATH/"

    # Update CRL (which is initially empty)
    update_crl

    # Generate shared secret for protection against DoS attacks
    # (must be readable by icapd for client configuration)
    openvpn --genkey --secret $CONFIG_PATH/ta.key
    chmod 640 $CONFIG_PATH/ta.key
    chgrp icapd $CONFIG_PATH/ta.key
}

# Copy the updated CRL to OpenVPN's config directory
# Prerequisite: OpenVpnCa.java has generated a new CRL in $CA_PATH
function update_crl {
    cp "$CA_PATH/crl.pem" "$CONFIG_PATH/"
}

function start {
    rm -f /etc/openvpn/eblocker.conf
    ln -s -f /opt/eblocker-icap/conf/openvpn-server.conf /etc/openvpn/eblocker.conf

    /bin/systemctl start openvpn@eblocker.service
}

echo "$SCRIPT_NAME called with argument(s): $@"

if [ $# -ge '1' ]; then
    case "$1" in
    "start")
        start
        exit $?
        ;;
    "stop")
        /bin/systemctl stop openvpn@eblocker.service
        exit $?
        ;;
    "status")
        /bin/systemctl status openvpn@eblocker.service
        exit $?
        ;;
    "init")
        init
        exit $?
        ;;
    "purge")
        purge
        exit $?
        ;;
    "update-crl")
        update_crl
        exit $?
        ;;
    esac
fi

echo "Error: Wrong mode." 1>&2
echo "Expected format: $SCRIPT_NAME start | stop | status | init | purge | update-crl" 1>&2

exit 1
