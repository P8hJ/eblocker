#!/bin/bash
#
# Copyright 2020 eBlocker Open Source UG (haftungsbeschraenkt)
#
# Licensed under the EUPL, Version 1.2 or - as soon they will be
# approved by the European Commission - subsequent versions of the EUPL
# (the "License"); You may not use this work except in compliance with
# the License. You may obtain a copy of the License at:
#
#   https://joinup.ec.europa.eu/page/eupl-text-11-12
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied. See the License for the specific language governing
# permissions and limitations under the License.
#
#
# This script will report the routing relevant parameters to the OpenVpnClient which will setup the routing tables (see also openvpn_setclientroute)

# NOTE: This script makes use of variables which only get injected by OpenVPN after the handshake (like e.g. "$route_net_gateway"),
#       so use it as an "up"-script


if [ $# -ge '1' ];
then
    ID=$1
    IFACENAME=$2
    DNS_SERVERS=`env | sed -n 's/foreign_option_.=dhcp-option DNS //p' | tr "\n" ,`
    DNS6_SERVERS=`env | sed -n 's/foreign_option_.=dhcp-option DNS6 //p' | tr "\n" ,`

    IP6_GATEWAYS=`env | sort | sed -n 's/route_ipv6_gateway_.=//p' | tr "\n" ,`
    IP6_NETWORKS=`env | sort | sed -n 's/route_ipv6_network_.=//p' | tr "\n" ,`

    # Tell Icapserver that this VPN client instance is ready
    redis-cli PUBLISH "vpn_profile_status:$ID:in" "up $IFACENAME $route_net_gateway $route_vpn_gateway $ifconfig_local $trusted_ip $DNS_SERVERS" > /dev/null
    if [ -n "$IP6_GATEWAYS" ]; then
        redis-cli PUBLISH "vpn_profile_status:$ID:in" "up6 $IP6_GATEWAYS $IP6_NETWORKS $DNS6_SERVERS" > /dev/null
    fi

else
    echo "Wrong number of arguments! Expecting the ID of the VPN instance as the first argument." 1>&2
    exit 1
fi

